use_r()
library(devtools)
use_r()
use_r()
library(devtools)
use_r()
#> • Call `use_test()` to create a matching test file
use_r("strsplit1")
#> • Edit 'R/strsplit1.R'
#> • Call `use_test()` to create a matching test file
load_all()
(x <- "alfa,bravo,charlie,delta")
#> [1] "alfa,bravo,charlie,delta"
strsplit1(x, split = ",")
#> [1] "alfa"    "bravo"   "charlie" "delta"
exists("strsplit1", where = globalenv(), inherits = FALSE)
q()
library(devtools)
load_all()
(x <- "alfa,bravo,charlie,delta")
#> [1] "alfa,bravo,charlie,delta"
strsplit1(x, split = ",")
q()
library(devtools)
load_all()
x <- "alfa,bravo,charlie,delta"
strsplit1(x, split = ",")
exists("strsplit1", where = globalenv(), inherits = FALSE)
check()
check()
help(roxygen2)
use(mit_license)
use_mit_license()
use_r("strsplit1")
document()
?strsplit1
check()
install()
library(p.post)
x <- "alfa,bravo,charlie,delta"
strsplit1(x, split = ",")
q()
library(devtools)
library(p.post)
x <- "alfa,bravo,charlie,delta"
strsplit1(x, split = ",")
use_testthat()
use_test("strsplit1")
q()
library(devtools)
load_all()
test()
q()
library(devtools)
library(p.post)
x <- "alfa,bravo,charlie,delta"
strsplit1(x, split = ",")
x
q()
library(detools)
library(devtools)
check()
q()
x <- "alfa,bravo,charlie,delta"
strsplit1(x, split = ",")
load_all()
library(devtools)
x
strsplit1(x, split = ",")
load_all()
strsplit1(x, split = ",")
check()
test()
q()
